package com.justindriggers.vulkan.models;

import org.lwjgl.vulkan.EXTBlendOperationAdvanced;
import org.lwjgl.vulkan.EXTConditionalRendering;
import org.lwjgl.vulkan.NVXDeviceGeneratedCommands;
import org.lwjgl.vulkan.VK10;

public enum Access implements Maskable {

    INDIRECT_COMMAND_READ(VK10.VK_ACCESS_INDIRECT_COMMAND_READ_BIT),
    INDEX_READ(VK10.VK_ACCESS_INDEX_READ_BIT),
    VERTEX_ATTRIBUTE_READ(VK10.VK_ACCESS_VERTEX_ATTRIBUTE_READ_BIT),
    UNIFORM_READ(VK10.VK_ACCESS_UNIFORM_READ_BIT),
    INPUT_ATTACHMENT_READ(VK10.VK_ACCESS_INPUT_ATTACHMENT_READ_BIT),
    SHADER_READ(VK10.VK_ACCESS_SHADER_READ_BIT),
    SHADER_WRITE(VK10.VK_ACCESS_SHADER_WRITE_BIT),
    COLOR_ATTACHMENT_READ(VK10.VK_ACCESS_COLOR_ATTACHMENT_READ_BIT),
    COLOR_ATTACHMENT_WRITE(VK10.VK_ACCESS_COLOR_ATTACHMENT_WRITE_BIT),
    DEPTH_STENCIL_ATTACHMENT_READ(VK10.VK_ACCESS_DEPTH_STENCIL_ATTACHMENT_READ_BIT),
    DEPTH_STENCIL_ATTACHMENT_WRITE(VK10.VK_ACCESS_DEPTH_STENCIL_ATTACHMENT_WRITE_BIT),
    TRANSFER_READ(VK10.VK_ACCESS_TRANSFER_READ_BIT),
    TRANSFER_WRITE(VK10.VK_ACCESS_TRANSFER_WRITE_BIT),
    HOST_READ(VK10.VK_ACCESS_HOST_READ_BIT),
    HOST_WRITE(VK10.VK_ACCESS_HOST_WRITE_BIT),
    MEMORY_READ(VK10.VK_ACCESS_MEMORY_READ_BIT),
    MEMORY_WRITE(VK10.VK_ACCESS_MEMORY_WRITE_BIT),
    CONDITIONAL_RENDERING_READ(EXTConditionalRendering.VK_ACCESS_CONDITIONAL_RENDERING_READ_BIT_EXT),
    COMMAND_PROCESS_READ(NVXDeviceGeneratedCommands.VK_ACCESS_COMMAND_PROCESS_READ_BIT_NVX),
    COMMAND_PROCESS_WRITE(NVXDeviceGeneratedCommands.VK_ACCESS_COMMAND_PROCESS_WRITE_BIT_NVX),
    COLOR_ATTACHMENT_READ_NONCOHERENT(EXTBlendOperationAdvanced.VK_ACCESS_COLOR_ATTACHMENT_READ_NONCOHERENT_BIT_EXT);

    private final int bit;

    Access(final int bit) {
        this.bit = bit;
    }

    @Override
    public int getBitValue() {
        return bit;
    }
}
